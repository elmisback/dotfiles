" Conform to XDG
  set directory=$XDG_CACHE_HOME/vim,~/,/tmp
  set backupdir=$XDG_CACHE_HOME/vim,~/,/tmp
  set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
  set runtimepath=$XDG_CACHE_HOME/vim,$XDG_CACHE_HOME/vim/after,$VIM,$VIMRUNTIME
  let $MYVIMRC="$XDG_CONFIG_HOME/vim/vimrc"

" Plugins
  call plug#begin('$XDG_DATA_HOME/vim/plugged')

  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-surround'
  "Plug 'scrooloose/syntastic'
  Plug 'ntpeters/vim-better-whitespace'
  Plug 'myusuf3/numbers.vim'
  "Plug 'jmcantrell/vim-virtualenv'
  "Plug 'Shougo/unite.vim'
  Plug 'kana/vim-submode'
  Plug 'easymotion/vim-easymotion'
  Plug 'haya14busa/incsearch.vim'
  Plug 'haya14busa/incsearch-fuzzy.vim'

  " Add plugins to &runtimepath
  call plug#end()

  " easymotion config
    " Use <Leader> (backspace by default) for easymotion
    map <Leader> <Plug>(easymotion-prefix)
    let g:EasyMotion_startofline = 0 " keep cursor column when JK motion

    " <Leader>f{char} to move to {char}
    map  <Leader>f <Plug>(easymotion-bd-f)
    nmap <Leader>f <Plug>(easymotion-overwin-f)

    " s{char}{char} to move to {char}{char}
    nmap <Leader>s <Plug>(easymotion-overwin-f2)

    " Move to line
    map <Leader>L <Plug>(easymotion-bd-jk)
    nmap <Leader>L <Plug>(easymotion-overwin-line)

    " Move to word
    map  <Leader>w <Plug>(easymotion-bd-w)
    nmap <Leader>w <Plug>(easymotion-overwin-w)

  " incsearch config
    map / <Plug>(incsearch-forward)
    map ? <Plug>(incsearch-backward)
    map g/ <Plug>(incsearch-stay)

    map z/ <Plug>(incsearch-fuzzy-/)
    map z? <Plug>(incsearch-fuzzy-?)
    map zg/ <Plug>(incsearch-fuzzy-stay)

    " :h g:incsearch#auto_nohlsearch
    set hlsearch
    let g:incsearch#auto_nohlsearch = 1
    map n  <plug>(incsearch-nohl-n)
    map n  <plug>(incsearch-nohl-n)
    map *  <plug>(incsearch-nohl-*)
    map #  <plug>(incsearch-nohl-#)
    map g* <plug>(incsearch-nohl-g*)
    map g# <Plug>(incsearch-nohl-g#)

"  READER submode
  call submode#enter_with('READER', 'n', '', '<space>', 'H')
  call submode#leave_with('READER', 'n', '', '<space>')
  call submode#map('READER', 'n', '', 'j', '<C-e>')
  call submode#map('READER', 'n', '', 'k', '<C-y>k')

  " Turn off automatic timeout
  let g:submode_timeout = 0
  " don't consume submode-leaving key
  let g:submode_keep_leaving_key = 1

  " vim-better-whitespace HACK: necessary because bug
  autocmd VimEnter * DisableWhitespace
  "autocmd VimEnter * EnableWhitespace  " turn off for now
  autocmd BufWritePre * StripWhitespace  " eliminate whitespace on save
  "autocmd VimEnter * DisableNonCountedBasicMotions

  nnoremap <C-t> :SyntasticToggleMode<CR>

" Line numbers
  " set relativenumber  " show line number relative to the current line
  set number
  set numberwidth=1

" Searching
  set ignorecase              " ignore case, except...
  set smartcase               " uppercase searches are case sensitive
  " clear highlighting with return
  nnoremap <CR> :noh<CR><CR>

" TODO look into this
" ctrl-p courtesy of Unite.vim
  nnoremap <C-p> :Unite file_rec/neovim<CR>

" Tabbing
  set expandtab " use spaces whenever tab is hit
  set shiftwidth=2 " sets width of indentation (autoindent)

" Folding
  set foldmethod=manual

  " fold with space
  " nnoremap <space> za
  " vnoremap <space> zf

" Use buffers as tabs.
  set hidden  " Allow open background files.
  nnoremap th  :bfirst<CR>
  nnoremap tj  :bprevious<CR>
  nnoremap tk  :bnext<CR>
  nnoremap tl  :blast<CR>
  nnoremap tn  :edit<Space>
  nnoremap td  :bdelete<CR>
  "nnoremap td  :tabclose<CR>
  "nnoremap tm  :tabm<Space>

" Clipboard support
  set clipboard=unnamedplus

" Colors
  let base16colorspace=256  " Access colors present in 256 colorspace
                            " (only use with base16-shell modification
                            " to 256 colorspace)
  set background=dark
  syntax on  " turn on syntax highlighting
  let &rtp.=','.$XDG_CONFIG_HOME.'/theme/vim'
  colorscheme base16-ateliersavanna

" Window navigation
  nnoremap <C-h> <C-w><C-h>
  nnoremap <C-j> <C-w><C-j>
  nnoremap <C-k> <C-w><C-k>
  nnoremap <C-l> <C-w><C-l>

" Vim practice.
  " Disable the arrow keys in command mode (a good habit).
  map <up> <nop>
  map <down> <nop>
  map <left> <nop>
  map <right> <nop>

  " Let's learn a different escape sequence.
  inoremap <Esc> <nop>
  inoremap jk <Esc>

" Misc.
  " fix annoying line-skipping behavior on long lines
  " nnoremap j gj
  " nnoremap k gk

  " whitespace
    " it's always annoying in these files
    autocmd FileType c,py,java autocmd BufWritePre <buffer> :%s/\s\+$//e

    " otherwise, we define
    command! -bar FixWhitespace %s/\s\+$//

  " Neovim's matchit is broken right now; turn it off.
  " let loaded_matchit = 1

" crosshair-style selection--useful for e.g. CSV
" set cursorline
" set cursorcolumn

" set colorcolumn=80  " Note the 80-character terminal width
